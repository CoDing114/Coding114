<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
</head>
<body>
    <h2>Nodejs 설치 및 실행</h2>
   <pre> 
        nodejs.org 에서 다운로드 받을수잇다 
        다운로드가 완료되면 실행 - cmd 실행.
        node -v :node버전 확인 (정상 설치가 되엇다면 현재 설치된 버전을 확인할수잇다)
        Node    :노드 실행
        .exit   :노트 종료 (Ctrl+c *2 혹은 .exit 동일하다)
        
        <h3>Tools</h3>
        pm2:auto startup
        install:npm install pm2 -g
        start:pm2 start '파일명'(pm2 start main.js)
        list:pm2 list
        stop:pm2 stop '파일명'(pm2 stop main)
        watch:pm2 start '파일명' --watch (자동 재부팅 설정)
        log: pm2 log(watch 사용시 에러 표시가안되므로 log를 활용하여 문제점 확인가능)

</pre>
<h3>서버 자동 재부팅 #2 </h3>
<pre>
    server에서 내용 변경후엔 재부팅을 해줘야하는데 nodemon을 사용하면 자동으로 재부팅 시켜준다.
터미널에 npm install -g nodemon 입력하면 자동설치, 'g'는 모든 폴더에서 사용가능이란 뜻이다
nodemon server.js 으로 실행할수잇다, win10일경우 보안오류가 뜰수잇다.
해결방법:Windows PowerShell을 관리자 권한으로 켠다
"executionpolicy"을 입력하면 "Restricted"라고 뜰것이다. 이것은 권한이 없어서이다
"set-executionpolicy unrestricted" 입력하면 권한부여 창이뜨는데 y를 입력하면된다. 
터미널로 돌아와 다시 nodemon server.js를 입력하면 잘 동작하는것을 볼수잇다
</pre>

<pre>
VSCODE에서 작업영역을 설정한다.
새터미널을 연다
터미넣에 npm init 입력
'This utility will walk you through creating a package.json file.
It only covers the most common items, and tries to guess sensible defaults.
See `npm help init` for definitive documentation on these fields
and exactly what they do.
Use `npm install <pkg>` afterwards to install a package and
save it as a dependency in the package.json file.
Press ^C at any time to quit.'
위왕같이 나오면 Enter를 누르면 된다 
entry point: (index.js) 'server.js' - entry point: (index.js) 엔트리 포인트만 내가 원하는 파일명으로 바꿔 주면 된다. 
Is this OK? (yes) 라는 창이 뜰때까지 계속 Enter를 누른다
package.json이라는 파일이 만들어진다,
</pre>

<h3>express 라이브러리를 설치해보자</h3>
<pre>
npm install express 을 입력한다.
package.json 이라는 파일에 보면 "express": "^4.17.1" 라는 코드가 생성된것을 볼수잇다. 
INstall END
</pre>

<h3>Node.js 서버 기본폼</h3>
<pre>
const express = require('express');
const app = express();

app.listen(8080,function(){
    console.log('listening on 8080')
});

app.get('경로',function(요청,응답){
    응답.send('요청페이지 입니다')
})
</pre>
</body>
</html>